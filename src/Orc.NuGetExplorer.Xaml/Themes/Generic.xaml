<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Orc.NuGetExplorer.Controls"
                    xmlns:catel="http://schemas.catelproject.com"
                    xmlns:orccontrols="http://schemas.wildgums.com/orc/controls"
                    xmlns:orctheming="http://schemas.wildgums.com/orc/theming">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Orc.Theming;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/Brushes.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/MaterialIcons.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Controls/RotationProgressBar.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Controls/Badged.xaml"/>
        <ResourceDictionary Source="/Orc.NuGetExplorer.Xaml;component/Themes/CompiledResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="HiddenListViewHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Hidden" />
    </Style>
        
    <Style x:Key="SettingsButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="Width" Value="24"></Setter>
        <Setter Property="Margin" Value="3 2 3 2"/>
    </Style>
    
    <Style TargetType="local:RotationProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template" Value="{StaticResource RotationProgressBar}"/>
    </Style>

    <Style TargetType="local:Badged">
        <Setter Property="Template" Value="{StaticResource Badged}"/>
    </Style>

    <Style x:Key="DefaultListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{orctheming:ThemeColor ThemeColorStyle=AccentColor40}"/>
        </Style.Resources>

        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="Background" Value="{DynamicResource Orc.Brushes.TransparentWhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Orc.Brushes.WhiteBrush20}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="ChromeGrid"
                          Background="{DynamicResource Orc.Brushes.TransparentWhiteBrush}">
                        <Border x:Name="Bd"
                            BorderBrush="{DynamicResource Orc.Brushes.Control.Border}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{DynamicResource Orc.Brushes.Control.Background}" 
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="Bd" 
                                    Value="{DynamicResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" 
                                    TargetName="Bd" 
                                    Value="{StaticResource Item.MouseOver.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="Bd" 
                                    Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" 
                                    TargetName="Bd" 
                                    Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="Bd" 
                                    Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" 
                                    TargetName="Bd" 
                                    Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" 
                                    TargetName="Bd" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="LabelButton">
        <Setter Property="Background" Value="{DynamicResource Orc.Brushes.TransparentWhiteBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="{DynamicResource Orc.Brushes.TransparentWhiteBrush}"
                          Name="templateRoot"
                          SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            BorderBrush="{DynamicResource Orc.Brushes.TransparentWhiteBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            Name="radioButtonBorder"
                            Margin="0"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">

                            <Grid Name="clickableContent">
                                <ContentPresenter RecognizesAccessKey="True"
                                         Content="{TemplateBinding ContentControl.Content}"
                                         ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                         ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                         Name="contentPresenter"  
                                         Margin="0"
                                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                         SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                         Focusable="False"/>
                            </Grid>
                        </Border>


                        <Rectangle x:Name="_underline"
                                   Grid.Row="1"
                                   Margin="0"
                                   Height="3"
                                   Visibility="Hidden"
                                   Fill="{DynamicResource Orc.Brushes.GrayBrush2}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentControl.HasContent" Value="True">
                            <Setter Property="FrameworkElement.FocusVisualStyle">
                                <Setter.Value>
                                    <Style TargetType="IFrameworkInputElement">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Stroke="{DynamicResource Orc.Brushes.Text}"
                                                        StrokeThickness="1"
                                                        StrokeDashArray="1 2"
                                                        Margin="14,0,0,0"
                                                        SnapsToDevicePixels="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Padding">
                                <Setter.Value>
                                    <Thickness>4,-1,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="_underline" 
                                    Value="Visible">
                            </Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="_underline" 
                                    Value="Collapsed">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>